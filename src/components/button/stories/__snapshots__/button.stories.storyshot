// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Button Button Performance 1`] = `<ButtonsPerformance />`;

exports[`Storyshots Button Button appearances 1`] = `
Array [
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
]
`;

exports[`Storyshots Button Button group 1`] = `
<XYGridElement
  alignX="left"
  className="gc-grid-x"
  gridDirection="horizontal"
  gutterSizes={
    Object {
      "medium": "30px",
      "small": "20px",
    }
  }
  wrap={true}
>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".0"
    vertical={false}
  >
    <ButtonGroup>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        First Button
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Second Button
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Button Tertius
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Fourth Button
      </Button>
    </ButtonGroup>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".1"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <ButtonGroup>
      <Button
        appearance="primary"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Alpha
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Beta
      </Button>
      <Button
        appearance="warning"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Delta
      </Button>
      <Button
        appearance="link"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Delta
      </Button>
    </ButtonGroup>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".2"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <ButtonGroup
      appearance="link"
    >
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Vuejs
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Angular
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        React
      </Button>
    </ButtonGroup>
  </Cell>
</XYGridElement>
`;

exports[`Storyshots Button Button options 1`] = `
<XYGridElement
  alignX="left"
  className="gc-grid-x"
  gridDirection="horizontal"
  gutterSizes={
    Object {
      "medium": "30px",
      "small": "20px",
    }
  }
  wrap={true}
>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".0"
    vertical={false}
  >
    <Button
      appearance="default"
      iconBefore={
        <FontAwesomeIcon$1
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                640,
                512,
                Array [],
                "f0f4",
                "M192 384h192c53 0 96-43 96-96h32c70.6 0 128-57.4 128-128S582.6 32 512 32H120c-13.3 0-24 10.7-24 24v232c0 53 43 96 96 96zM512 96c35.3 0 64 28.7 64 64s-28.7 64-64 64h-32V96h32zm47.7 384H48.3c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z",
              ],
              "iconName": "coffee",
              "prefix": "fas",
            }
          }
          listItem={false}
          mask={null}
          name=""
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          transform={null}
        />
      }
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      Icon Before
    </Button>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".1"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <Button
      appearance="default"
      iconAfter={
        <FontAwesomeIcon$1
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                640,
                512,
                Array [],
                "f0f4",
                "M192 384h192c53 0 96-43 96-96h32c70.6 0 128-57.4 128-128S582.6 32 512 32H120c-13.3 0-24 10.7-24 24v232c0 53 43 96 96 96zM512 96c35.3 0 64 28.7 64 64s-28.7 64-64 64h-32V96h32zm47.7 384H48.3c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z",
              ],
              "iconName": "coffee",
              "prefix": "fas",
            }
          }
          listItem={false}
          mask={null}
          name=""
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          transform={null}
        />
      }
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      Icon After
    </Button>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".2"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <Button
      appearance="default"
      href="//github.com/growcss/growcss"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      with href attribute
    </Button>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".3"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <Button
      appearance="default"
      href="//github.com/growcss/growcss"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      with href attribute + no target
    </Button>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".4"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <Button
      appearance="default"
      href="//github.com/growcss/growcss"
      iconBefore={
        <FontAwesomeIcon$1
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                192,
                512,
                Array [],
                "f12a",
                "M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z",
              ],
              "iconName": "exclamation",
              "prefix": "fas",
            }
          }
          listItem={false}
          mask={null}
          name=""
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          transform={null}
        />
      }
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      with href attribute + icon
    </Button>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".5"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <Button
      appearance="default"
      href="//github.com/growcss/growcss"
      iconBefore={
        <FontAwesomeIcon$1
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                192,
                512,
                Array [],
                "f12a",
                "M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z",
              ],
              "iconName": "exclamation",
              "prefix": "fas",
            }
          }
          listItem={false}
          mask={null}
          name=""
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          transform={null}
        />
      }
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      target="_blank"
      type="button"
    >
      with href attribute + icon +  target
    </Button>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".6"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <Button
      appearance="default"
      inline={false}
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={true}
      spacing="default"
      type="button"
    >
      Fit Container
    </Button>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".7"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <Button
      appearance="default"
      iconBefore={
        <FontAwesomeIcon$1
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                192,
                512,
                Array [],
                "f12a",
                "M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z",
              ],
              "iconName": "exclamation",
              "prefix": "fas",
            }
          }
          listItem={false}
          mask={null}
          name=""
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          transform={null}
        />
      }
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={true}
      spacing="default"
      type="button"
    >
      Button with should fit container and before icon
    </Button>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".8"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <Button
      appearance="default"
      iconAfter={
        <FontAwesomeIcon$1
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                192,
                512,
                Array [],
                "f12a",
                "M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z",
              ],
              "iconName": "exclamation",
              "prefix": "fas",
            }
          }
          listItem={false}
          mask={null}
          name=""
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          transform={null}
        />
      }
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={true}
      spacing="default"
      type="button"
    >
      Button with should fit container and after icon
    </Button>
  </Cell>
</XYGridElement>
`;

exports[`Storyshots Button Button spacing 1`] = `
<div>
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  >
    <Cell
      gridColumns={12}
      gutterSizes={
        Object {
          "medium": "30px",
          "small": "20px",
        }
      }
      small={6}
      vertical={false}
    >
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Default
      </Button>
    </Cell>
    <Cell
      gridColumns={12}
      gutterSizes={
        Object {
          "medium": "30px",
          "small": "20px",
        }
      }
      small={6}
      vertical={false}
    >
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="compact"
        type="button"
      >
        Compact
      </Button>
    </Cell>
  </GridX>
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  >
    <Cell
      gridColumns={12}
      gutterSizes={
        Object {
          "medium": "30px",
          "small": "20px",
        }
      }
      small={4}
      vertical={false}
    >
      <Button
        appearance="link"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Default
      </Button>
    </Cell>
    <Cell
      gridColumns={12}
      gutterSizes={
        Object {
          "medium": "30px",
          "small": "20px",
        }
      }
      small={4}
      vertical={false}
    >
      <Button
        appearance="link"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="compact"
        type="button"
      >
        Compact
      </Button>
    </Cell>
    <Cell
      gridColumns={12}
      gutterSizes={
        Object {
          "medium": "30px",
          "small": "20px",
        }
      }
      small={4}
      vertical={false}
    >
      <Button
        appearance="link"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="none"
        type="button"
      >
        None
      </Button>
    </Cell>
  </GridX>
</div>
`;

exports[`Storyshots Button Button theming 1`] = `
<div>
  <ThemeProvider
    theme={
      Object {
        "button": Object {
          "theme": Object {
            "primary": Object {
              "background": Object {
                "active": "hsl(261.79999999999995, 46.8%, 63.1%)",
                "default": "hsl(261.79999999999995, 46.8%, 63.1%)",
                "disabled": "hsl(0, 0%, 96.1%)",
                "hover": "hsl(261.29999999999995, 46.3%, 73.7%)",
                "selected": "hsl(261.9, 46.7%, 55.1%)",
              },
              "boxShadowColor": Object {
                "focus": "hsl(0, 0%, 96.1%)",
              },
              "color": Object {
                "default": "hsl(0, 0%, 100%)",
                "disabled": "hsl(0, 0%, 87.8%)",
                "selected": "hsl(0, 0%, 100%)",
              },
            },
          },
        },
      }
    }
  >
    <ButtonGroup>
      <Button
        appearance="primary"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Button
      </Button>
      <Button
        appearance="primary"
        isDisabled={true}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Disabled button
      </Button>
      <Button
        appearance="primary"
        isDisabled={false}
        isSelected={true}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Selected
      </Button>
    </ButtonGroup>
  </ThemeProvider>
  <br />
  <ButtonGroup
    style={
      Object {
        "background": "hsl(0, 0%, 45.9%)",
        "marginTop": "10px",
        "padding": "20px",
      }
    }
  >
    <Button
      appearance="primary"
      displayType="ghost"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      A primary ghost button
    </Button>
    <Button
      appearance="default"
      displayType="ghost"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      A default ghost button
    </Button>
    <Button
      appearance="warning"
      displayType="ghost"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      A warning ghost button
    </Button>
    <Button
      appearance="danger"
      displayType="ghost"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      A danger ghost button
    </Button>
    <Button
      appearance="link"
      displayType="ghost"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      A link ghost button
    </Button>
  </ButtonGroup>
  <br />
  <ButtonGroup
    style={
      Object {
        "background": "hsl(0, 0%, 45.9%)",
        "marginTop": "10px",
        "padding": "20px",
      }
    }
  >
    <Button
      appearance="primary"
      displayType="dashed"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      A primary dashed button
    </Button>
    <Button
      appearance="default"
      displayType="dashed"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      A default dashed button
    </Button>
    <Button
      appearance="warning"
      displayType="dashed"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      A warning dashed button
    </Button>
    <Button
      appearance="danger"
      displayType="dashed"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      A danger dashed button
    </Button>
    <Button
      appearance="link"
      displayType="dashed"
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      A link dashed button
    </Button>
  </ButtonGroup>
</div>
`;

exports[`Storyshots Button Button truncation 1`] = `
<div
  style={
    Object {
      "width": "190px",
    }
  }
>
  <Button
    appearance="default"
    iconBefore={
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              192,
              512,
              Array [],
              "f12a",
              "M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z",
            ],
            "iconName": "exclamation",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    }
    isDisabled={false}
    isSelected={false}
    shouldFitContainer={false}
    spacing="default"
    style={
      Object {
        "width": "30px",
      }
    }
    type="button"
  >
    exclamation
  </Button>
  <Button
    appearance="default"
    isDisabled={false}
    isSelected={false}
    shouldFitContainer={false}
    spacing="default"
    type="button"
  >
    I am wider than my parent
  </Button>
  <Button
    appearance="default"
    iconBefore={
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              192,
              512,
              Array [],
              "f12a",
              "M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z",
            ],
            "iconName": "exclamation",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    }
    isDisabled={false}
    isSelected={false}
    shouldFitContainer={false}
    spacing="default"
    type="button"
  >
    I am wider than my parent
  </Button>
  <Button
    appearance="default"
    iconAfter={
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              448,
              512,
              Array [],
              "f063",
              "M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z",
            ],
            "iconName": "arrow-down",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
    }
    isDisabled={false}
    isSelected={false}
    shouldFitContainer={false}
    spacing="default"
    type="button"
  >
    I am wider than my parent
  </Button>
</div>
`;
