// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Button Button appearances 1`] = `
Array [
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  />,
]
`;

exports[`Storyshots Button Button group 1`] = `
<XYGridElement
  alignX="left"
  className="gc-grid-x"
  gridDirection="horizontal"
  gutterSizes={
    Object {
      "medium": "30px",
      "small": "20px",
    }
  }
  wrap={true}
>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".0"
    vertical={false}
  >
    <ButtonGroup>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        First Button
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Second Button
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Button Tertius
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Fourth Button
      </Button>
    </ButtonGroup>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".1"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <ButtonGroup>
      <Button
        appearance="primary"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Alpha
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Beta
      </Button>
      <Button
        appearance="warning"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Delta
      </Button>
      <Button
        appearance="link"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Delta
      </Button>
    </ButtonGroup>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".2"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <ButtonGroup
      appearance="link"
    >
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Vuejs
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Angular
      </Button>
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        React
      </Button>
    </ButtonGroup>
  </Cell>
</XYGridElement>
`;

exports[`Storyshots Button Button options 1`] = `
<XYGridElement
  alignX="left"
  className="gc-grid-x"
  gridDirection="horizontal"
  gutterSizes={
    Object {
      "medium": "30px",
      "small": "20px",
    }
  }
  wrap={true}
>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".0"
    vertical={false}
  >
    <Button
      appearance="default"
      iconBefore={
        <FontAwesomeIcon$1
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                640,
                512,
                Array [],
                "f0f4",
                "M192 384h192c53 0 96-43 96-96h32c70.6 0 128-57.4 128-128S582.6 32 512 32H120c-13.3 0-24 10.7-24 24v232c0 53 43 96 96 96zM512 96c35.3 0 64 28.7 64 64s-28.7 64-64 64h-32V96h32zm47.7 384H48.3c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z",
              ],
              "iconName": "coffee",
              "prefix": "fas",
            }
          }
          listItem={false}
          mask={null}
          name=""
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          transform={null}
        />
      }
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      Icon Before
    </Button>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".1"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <Button
      appearance="default"
      iconAfter={
        <FontAwesomeIcon$1
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                640,
                512,
                Array [],
                "f0f4",
                "M192 384h192c53 0 96-43 96-96h32c70.6 0 128-57.4 128-128S582.6 32 512 32H120c-13.3 0-24 10.7-24 24v232c0 53 43 96 96 96zM512 96c35.3 0 64 28.7 64 64s-28.7 64-64 64h-32V96h32zm47.7 384H48.3c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z",
              ],
              "iconName": "coffee",
              "prefix": "fas",
            }
          }
          listItem={false}
          mask={null}
          name=""
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          transform={null}
        />
      }
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={false}
      spacing="default"
      type="button"
    >
      Icon After
    </Button>
  </Cell>
  <Cell
    gridColumns={12}
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
    key=".2"
    style={
      Object {
        "paddingTop": "10px",
      }
    }
    vertical={false}
  >
    <Button
      appearance="default"
      inline={false}
      isDisabled={false}
      isSelected={false}
      shouldFitContainer={true}
      spacing="default"
      type="button"
    >
      Fit Container
    </Button>
  </Cell>
</XYGridElement>
`;

exports[`Storyshots Button Button spacing 1`] = `
<div>
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  >
    <Cell
      gridColumns={12}
      gutterSizes={
        Object {
          "medium": "30px",
          "small": "20px",
        }
      }
      small={6}
      vertical={false}
    >
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Default
      </Button>
    </Cell>
    <Cell
      gridColumns={12}
      gutterSizes={
        Object {
          "medium": "30px",
          "small": "20px",
        }
      }
      small={6}
      vertical={false}
    >
      <Button
        appearance="default"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="compact"
        type="button"
      >
        Compact
      </Button>
    </Cell>
  </GridX>
  <GridX
    alignX="left"
    gutterSizes={
      Object {
        "medium": "30px",
        "small": "20px",
      }
    }
  >
    <Cell
      gridColumns={12}
      gutterSizes={
        Object {
          "medium": "30px",
          "small": "20px",
        }
      }
      small={4}
      vertical={false}
    >
      <Button
        appearance="link"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="default"
        type="button"
      >
        Default
      </Button>
    </Cell>
    <Cell
      gridColumns={12}
      gutterSizes={
        Object {
          "medium": "30px",
          "small": "20px",
        }
      }
      small={4}
      vertical={false}
    >
      <Button
        appearance="link"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="compact"
        type="button"
      >
        Compact
      </Button>
    </Cell>
    <Cell
      gridColumns={12}
      gutterSizes={
        Object {
          "medium": "30px",
          "small": "20px",
        }
      }
      small={4}
      vertical={false}
    >
      <Button
        appearance="link"
        isDisabled={false}
        isSelected={false}
        shouldFitContainer={false}
        spacing="none"
        type="button"
      >
        None
      </Button>
    </Cell>
  </GridX>
</div>
`;
